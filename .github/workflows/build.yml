name: Build

on:
  push:
    branches: [ master, main, develop ]

jobs:
  version:
    runs-on: ubuntu-latest
    outputs:
      current-version: ${{ env.CURRENT_VERSION }}
      version: ${{ steps.gitversion.outputs.semVer }}
    steps:
      - name: Check out code
        uses: actions/checkout@v2
        with:
          fetch-depth: '0'
      - name: Get current Pkl version
        run: |
          VER=$(cat .version)
          echo "CURRENT_VERSION=$VER" >> $GITHUB_ENV
      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v0.9.6
        with:
          versionSpec: '5.x'
      - name: Use GitVersion
        id: gitversion # step id used as reference for output values
        uses: gittools/actions/gitversion/execute@v0.9.6
        with:
          useConfigFile: true
          showConfig: true
          configFilePath: ./gitversion.yml
      - name: Display SemVer
        run: |
          echo "SemVer: ${{ steps.gitversion.outputs.semVer }}"
  should-release:
    runs-on: ubuntu-latest
    outputs:
      proceed: ${{ steps.release.outputs.proceed && github.event_name != 'pull_request' }}
    steps:
      - id: release
        uses: phish108/release-check@1.0.15
        with: 
          github-token: ${{ secrets.GITHUB_TOKEN }}
          protected-paths: |
            README.md
            .version
  release:
    runs-on: ubuntu-latest
    needs: 
      - version
      - should-release
    permissions:
      contents: write
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    if: needs.should-release.outputs.proceed
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ needs.version.outputs.version }}
          release_name: Release ${{ needs.version.outputs.version }}
          draft: false
          prerelease: ${{ github.ref == 'refs/heads/develop' }}
      - uses: tvdias/github-tagger@v0.0.1
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          tag: pkl-strings@${{ needs.version.outputs.version }}
  version-update:
    runs-on: ubuntu-latest
    needs: 
      - version
      - should-release
    permissions:
      contents: write
    if: needs.should-release.outputs.proceed
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - uses: DamianReeves/write-file-action@master
        with:
          path: .version
          write-mode: overwrite
          contents: ${{ needs.version.outputs.version }}
      - name: Find and Replace
        uses: jacobtomlinson/gha-find-replace@v3
        with:
          find: "${{ needs.version.outputs.current-version }}"
          replace: "${{ needs.version.outputs.version }}"
          regex: false
          include: README.md
      - uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: Update version numbers
  upload-project:
    runs-on: ubuntu-latest
    needs: 
      - version
      - release
    permissions:
      contents: write
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Install pkl
      uses: pkl-community/setup-pkl@v0
      with:
        pkl-version: 0.25.3
    - uses: DamianReeves/write-file-action@master
      with:
        path: .version
        write-mode: overwrite
        contents: ${{ needs.version.outputs.version }}
    - name: Package Pkl
      run: pkl project package src
    - name: Upload Release Artifact
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        TAG=pkl-strings@${{ needs.version.outputs.version }}
        gh release upload v${{ needs.version.outputs.version }} .out/$TAG/*
        gh release upload $TAG .out/$TAG/*

