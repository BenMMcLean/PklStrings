import "pkl:xml" as xml
import "schema.pkl"

class AndroidStringRenderer extends schema.StringRenderer {
    platformName: String = "android"

    function render(localizable: schema.Localizable): Mapping<String, FileOutput> = new Mapping {
        for(language in localizable.languages) {
            [
                if (language.code == localizable.sourceLanguage) 
                    "\(platformName)/values/strings.xml" 
                else 
                    "\(platformName)/values-\(language.code)/strings.xml"
            ] = new FileOutput {
                renderer = new xml.Renderer {}
                value = mapResources(language.strings)
            }
        }
    }

    local function mapResources(resources: Listing<schema.ResourceString>) = (xml.Element("resources")) {
        for (r in resources) {
            if (r is schema.SingleResourceString)
                mapSingleResourceString(r)
            else if(r is schema.QuantityResourceString)
                mapQuantityResourceString(r)
            else
                throw("Unknown element")
        }
    }

    local function mapSingleResourceString(
        s: schema.SingleResourceString
    ): Dynamic = (xml.Element("string")) {
        attributes {
            ["name"] = s.name
        }
        s.get(platformName)
    }

    local function mapQuantityResourceString(
        s: schema.QuantityResourceString
    ): Dynamic = (xml.Element("plurals")) {
        attributes {
            ["name"] = s.name
        }
        for (q in s.options) {
            mapQuantityOption(q)
        }
    }

    local function mapQuantityOption(
        q: schema.QuantityOption
    ): Dynamic = (xml.Element("item")) {
        attributes {
            ["quantity"] = q.quantity
        }
        q.get(platformName)
    }
}


